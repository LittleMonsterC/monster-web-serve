# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import demo_pb2 as demo__pb2


class DemoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Calculate = channel.unary_unary(
        '/Demo/Calculate',
        request_serializer=demo__pb2.Work.SerializeToString,
        response_deserializer=demo__pb2.Result.FromString,
        )
    self.GetCitySubjects = channel.unary_stream(
        '/Demo/GetCitySubjects',
        request_serializer=demo__pb2.City.SerializeToString,
        response_deserializer=demo__pb2.Subject.FromString,
        )
    self.Accumulate = channel.stream_unary(
        '/Demo/Accumulate',
        request_serializer=demo__pb2.Delta.SerializeToString,
        response_deserializer=demo__pb2.Sum.FromString,
        )
    self.GuessNumber = channel.stream_stream(
        '/Demo/GuessNumber',
        request_serializer=demo__pb2.Number.SerializeToString,
        response_deserializer=demo__pb2.Answer.FromString,
        )


class DemoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Calculate(self, request, context):
    """unary rpc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCitySubjects(self, request, context):
    """server streaming rpc
    客户端发送城市名字，服务端多次返回该城市包含的学科
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Accumulate(self, request_iterator, context):
    """client streaming rpc
    客户端多次发送累加值，服务端返回最终的累计和
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GuessNumber(self, request_iterator, context):
    """bidirectional streaming rpc
    客户端多次发送猜的数字，对于猜中的数字，服务端返回，否则不返回
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DemoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Calculate': grpc.unary_unary_rpc_method_handler(
          servicer.Calculate,
          request_deserializer=demo__pb2.Work.FromString,
          response_serializer=demo__pb2.Result.SerializeToString,
      ),
      'GetCitySubjects': grpc.unary_stream_rpc_method_handler(
          servicer.GetCitySubjects,
          request_deserializer=demo__pb2.City.FromString,
          response_serializer=demo__pb2.Subject.SerializeToString,
      ),
      'Accumulate': grpc.stream_unary_rpc_method_handler(
          servicer.Accumulate,
          request_deserializer=demo__pb2.Delta.FromString,
          response_serializer=demo__pb2.Sum.SerializeToString,
      ),
      'GuessNumber': grpc.stream_stream_rpc_method_handler(
          servicer.GuessNumber,
          request_deserializer=demo__pb2.Number.FromString,
          response_serializer=demo__pb2.Answer.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Demo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
